{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\bloco-de-notas\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\n// App.tsx\nimport React, { useState } from 'react'; // Importa o React e a função useState do pacote 'react'\nimport './App.css'; // Importa o arquivo de estilos CSS\n\n// Define o tipo de cada nota\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Componente principal da aplicação\n  // Define o estado inicial das notas e dos campos de título e conteúdo\n  const [notes, setNotes] = useState([]); // Estado das notas, começa como um array vazio\n  const [title, setTitle] = useState(''); // Estado do título da nota, começa como uma string vazia\n  const [content, setContent] = useState(''); // Estado do conteúdo da nota, começa como uma string vazia\n\n  // Função para adicionar uma nova nota\n  const addNote = () => {\n    const newNote = {\n      // Cria um novo objeto de nota\n      id: Date.now(),\n      // Atribui um ID baseado no timestamp atual\n      title,\n      // Título da nota\n      content // Conteúdo da nota\n    };\n    setNotes([...notes, newNote]); // Adiciona a nova nota ao array de notas\n    setTitle(''); // Limpa o campo de título\n    setContent(''); // Limpa o campo de conteúdo\n  };\n\n  // Função para deletar uma nota\n  const deleteNote = id => {\n    const updatedNotes = notes.filter(note => note.id !== id); // Filtra as notas para remover a nota com o ID fornecido\n    setNotes(updatedNotes); // Atualiza o estado das notas removendo a nota com o ID fornecido\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gerenciador de Notas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"T\\xEDtulo da nota\",\n        value: title,\n        onChange: e => setTitle(e.target.value) // Atualiza o estado do título conforme o usuário digita\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Conte\\xFAdo da nota\",\n        value: content,\n        onChange: e => setContent(e.target.value) // Atualiza o estado do conteúdo conforme o usuário digita\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNote,\n        children: \"Salvar Nota\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \" /* Bot\\xE3o para salvar a nota */\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-container\",\n      children: [\" /* Container para exibir as notas */\", notes.map(note =>\n      /*#__PURE__*/\n      /* Mapeia cada nota e exibe na tela */\n      _jsxDEV(\"div\", {\n        className: \"note\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteNote(note.id),\n          children: \"Excluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), \" \"]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"brLVvTJr1j1TGG9sjeJHV+qSPo0=\");\n_c = App;\nexport default App; // Exporta o componente principal da aplicação\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","notes","setNotes","title","setTitle","content","setContent","addNote","newNote","id","Date","now","deleteNote","updatedNotes","filter","note","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/web/bloco-de-notas/src/App.tsx"],"sourcesContent":["// App.tsx\nimport React, { useState } from 'react'; // Importa o React e a função useState do pacote 'react'\nimport './App.css'; // Importa o arquivo de estilos CSS\n\n// Define o tipo de cada nota\ntype Note = {\n  id: number; // Identificador único da nota\n  title: string; // Título da nota\n  content: string; // Conteúdo da nota\n};\n\nconst App: React.FC = () => { // Componente principal da aplicação\n  // Define o estado inicial das notas e dos campos de título e conteúdo\n  const [notes, setNotes] = useState<Note[]>([]); // Estado das notas, começa como um array vazio\n  const [title, setTitle] = useState<string>(''); // Estado do título da nota, começa como uma string vazia\n  const [content, setContent] = useState<string>(''); // Estado do conteúdo da nota, começa como uma string vazia\n\n  // Função para adicionar uma nova nota\n  const addNote = () => {\n    const newNote: Note = { // Cria um novo objeto de nota\n      id: Date.now(), // Atribui um ID baseado no timestamp atual\n      title, // Título da nota\n      content, // Conteúdo da nota\n    };\n    setNotes([...notes, newNote]); // Adiciona a nova nota ao array de notas\n    setTitle(''); // Limpa o campo de título\n    setContent(''); // Limpa o campo de conteúdo\n  };\n\n  // Função para deletar uma nota\n  const deleteNote = (id: number) => {\n    const updatedNotes = notes.filter((note) => note.id !== id); // Filtra as notas para remover a nota com o ID fornecido\n    setNotes(updatedNotes); // Atualiza o estado das notas removendo a nota com o ID fornecido\n  };\n\n  return (\n    <div className=\"App\"> {/* Container principal da aplicação */}\n      <h1>Gerenciador de Notas</h1> {/* Título da aplicação */}\n      <div className=\"form-container\"> {/* Container para o formulário de adição de notas */}\n        <input\n          type=\"text\"\n          placeholder=\"Título da nota\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)} // Atualiza o estado do título conforme o usuário digita\n        />\n        <textarea\n          placeholder=\"Conteúdo da nota\"\n          value={content}\n          onChange={(e) => setContent(e.target.value)} // Atualiza o estado do conteúdo conforme o usuário digita\n        ></textarea>\n        <button onClick={addNote}>Salvar Nota</button> /* Botão para salvar a nota */\n      </div>\n      <div className=\"notes-container\"> /* Container para exibir as notas */\n        {notes.map((note) => ( /* Mapeia cada nota e exibe na tela */\n          <div className=\"note\" key={note.id}> {/* Container para cada nota */}\n            <h3>{note.title}</h3> {/* Título da nota */}\n            <p>{note.content}</p> {/* Conteúdo da nota */}\n            <button onClick={() => deleteNote(note.id)}>Excluir</button> {/* Botão para excluir a nota */}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App; // Exporta o componente principal da aplicação\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}