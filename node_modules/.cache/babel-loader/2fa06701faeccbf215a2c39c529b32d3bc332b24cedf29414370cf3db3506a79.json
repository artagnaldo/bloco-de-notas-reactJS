{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\bloco-de-notas\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\n// src/App.tsx\nimport React, { useState } from 'react';\nimport './App.css';\n\n// Definindo o tipo de uma nota\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Estado para armazenar a lista de notas\n  const [notes, setNotes] = useState([]);\n  // Estado para armazenar o título da nova nota\n  const [title, setTitle] = useState('');\n  // Estado para armazenar o conteúdo da nova nota\n  const [content, setContent] = useState('');\n\n  // Função para adicionar uma nova nota\n  const addNote = () => {\n    // Verifica se o título e o conteúdo da nota não estão vazios\n    if (title.trim() === '' || content.trim() === '') return;\n    // Cria um objeto de nota com um ID único baseado no horário atual\n    const newNote = {\n      id: Date.now(),\n      title: title,\n      content: content\n    };\n    // Adiciona a nova nota à lista de notas\n    setNotes([...notes, newNote]);\n    // Limpa os campos de título e conteúdo\n    setTitle('');\n    setContent('');\n  };\n\n  // Função para excluir uma nota\n  const deleteNote = id => {\n    // Filtra a lista de notas para remover a nota com o ID fornecido\n    const updatedNotes = notes.filter(note => note.id !== id);\n    // Atualiza o estado das notas\n    setNotes(updatedNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gerenciador de Notas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"T\\xEDtulo da nota\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Conte\\xFAdo da nota\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNote,\n        children: \"Salvar Nota\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-container\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteNote(note.id),\n          children: \"Excluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"brLVvTJr1j1TGG9sjeJHV+qSPo0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","notes","setNotes","title","setTitle","content","setContent","addNote","trim","newNote","id","Date","now","deleteNote","updatedNotes","filter","note","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/web/bloco-de-notas/src/App.tsx"],"sourcesContent":["// src/App.tsx\nimport React, { useState } from 'react';\nimport './App.css';\n\n// Definindo o tipo de uma nota\ntype Note = {\n  id: number;\n  title: string;\n  content: string;\n};\n\nconst App: React.FC = () => {\n  // Estado para armazenar a lista de notas\n  const [notes, setNotes] = useState<Note[]>([]);\n  // Estado para armazenar o título da nova nota\n  const [title, setTitle] = useState<string>('');\n  // Estado para armazenar o conteúdo da nova nota\n  const [content, setContent] = useState<string>('');\n\n  // Função para adicionar uma nova nota\n  const addNote = () => {\n    // Verifica se o título e o conteúdo da nota não estão vazios\n    if (title.trim() === '' || content.trim() === '') return;\n    // Cria um objeto de nota com um ID único baseado no horário atual\n    const newNote: Note = {\n      id: Date.now(),\n      title: title,\n      content: content,\n    };\n    // Adiciona a nova nota à lista de notas\n    setNotes([...notes, newNote]);\n    // Limpa os campos de título e conteúdo\n    setTitle('');\n    setContent('');\n  };\n\n  // Função para excluir uma nota\n  const deleteNote = (id: number) => {\n    // Filtra a lista de notas para remover a nota com o ID fornecido\n    const updatedNotes = notes.filter((note) => note.id !== id);\n    // Atualiza o estado das notas\n    setNotes(updatedNotes);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Gerenciador de Notas</h1>\n      {/* Formulário para adicionar uma nova nota */}\n      <div className=\"form-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Título da nota\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <textarea\n          placeholder=\"Conteúdo da nota\"\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n        ></textarea>\n        <button onClick={addNote}>Salvar Nota</button>\n      </div>\n      {/* Lista de notas */}\n      <div className=\"notes-container\">\n        {notes.map((note) => (\n          <div className=\"note\" key={note.id}>\n            <h3>{note.title}</h3>\n            <p>{note.content}</p>\n            <button onClick={() => deleteNote(note.id)}>Excluir</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}