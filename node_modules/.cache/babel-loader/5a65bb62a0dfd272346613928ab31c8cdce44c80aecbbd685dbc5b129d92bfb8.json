{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\bloco-de-notas\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\n// App.tsx\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notas, setNotas] = useState([]);\n  const [titulo, setTitulo] = useState('');\n  const [conteudo, setConteudo] = useState('');\n  const handleAdicionarNota = () => {\n    if (titulo && conteudo) {\n      const novaNota = {\n        id: Math.floor(Math.random() * 1000),\n        titulo,\n        conteudo\n      };\n      setNotas([...notas, novaNota]);\n      setTitulo('');\n      setConteudo('');\n    }\n  };\n  const handleExcluirNota = id => {\n    const novasNotas = notas.filter(nota => nota.id !== id);\n    setNotas(novasNotas);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bloco de Notas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"T\\xEDtulo\",\n        value: titulo,\n        onChange: e => setTitulo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Conte\\xFAdo\",\n        value: conteudo,\n        onChange: e => setConteudo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAdicionarNota,\n        children: \"Adicionar Nota\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notas\",\n      children: notas.map(nota => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nota\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: nota.titulo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: nota.conteudo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleExcluirNota(nota.id),\n          children: \"Excluir Nota\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, nota.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"l7kln8XJ3Ns00AIgjorwPBDot7I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","notas","setNotas","titulo","setTitulo","conteudo","setConteudo","handleAdicionarNota","novaNota","id","Math","floor","random","handleExcluirNota","novasNotas","filter","nota","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/web/bloco-de-notas/src/App.tsx"],"sourcesContent":["// App.tsx\nimport React, { useState } from 'react';\nimport './App.css';\n\ninterface Nota {\n  id: number;\n  titulo: string;\n  conteudo: string;\n}\n\nconst App: React.FC = () => {\n  const [notas, setNotas] = useState<Nota[]>([]);\n  const [titulo, setTitulo] = useState('');\n  const [conteudo, setConteudo] = useState('');\n\n  const handleAdicionarNota = () => {\n    if (titulo && conteudo) {\n      const novaNota: Nota = {\n        id: Math.floor(Math.random() * 1000),\n        titulo,\n        conteudo,\n      };\n      setNotas([...notas, novaNota]);\n      setTitulo('');\n      setConteudo('');\n    }\n  };\n\n  const handleExcluirNota = (id: number) => {\n    const novasNotas = notas.filter((nota) => nota.id !== id);\n    setNotas(novasNotas);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Bloco de Notas</h1>\n      <div className=\"form\">\n        <input\n          type=\"text\"\n          placeholder=\"Título\"\n          value={titulo}\n          onChange={(e) => setTitulo(e.target.value)}\n        />\n        <textarea\n          placeholder=\"Conteúdo\"\n          value={conteudo}\n          onChange={(e) => setConteudo(e.target.value)}\n        ></textarea>\n        <button onClick={handleAdicionarNota}>Adicionar Nota</button>\n      </div>\n      <div className=\"notas\">\n        {notas.map((nota) => (\n          <div className=\"nota\" key={nota.id}>\n            <h2>{nota.titulo}</h2>\n            <p>{nota.conteudo}</p>\n            <button onClick={() => handleExcluirNota(nota.id)}>Excluir Nota</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}