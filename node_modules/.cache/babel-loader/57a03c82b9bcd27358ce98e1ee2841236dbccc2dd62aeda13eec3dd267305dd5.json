{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\bloco-de-notas\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notas, setNotas] = useState([]);\n  const [titulo, setTitulo] = useState('');\n  const [conteudo, setConteudo] = useState('');\n  const adicionarNota = () => {\n    if (titulo.trim() !== '' && conteudo.trim() !== '') {\n      const novaNota = {\n        id: new Date().getTime(),\n        titulo,\n        conteudo\n      };\n      setNotas([...notas, novaNota]);\n      setTitulo('');\n      setConteudo('');\n    } else {\n      alert('Por favor, preencha o título e o conteúdo da nota.');\n    }\n  };\n  const excluirNota = id => {\n    const novasNotas = notas.filter(nota => nota.id !== id);\n    setNotas(novasNotas);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bloco de Notas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"T\\xEDtulo da nota\",\n        value: titulo,\n        onChange: e => setTitulo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Conte\\xFAdo da nota\",\n        value: conteudo,\n        onChange: e => setConteudo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: adicionarNota,\n        children: \"Adicionar Nota\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notas\",\n      children: notas.map(nota => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nota\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: nota.titulo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: nota.conteudo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => excluirNota(nota.id),\n          children: \"Excluir Nota\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, nota.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"l7kln8XJ3Ns00AIgjorwPBDot7I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","notas","setNotas","titulo","setTitulo","conteudo","setConteudo","adicionarNota","trim","novaNota","id","Date","getTime","alert","excluirNota","novasNotas","filter","nota","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/web/bloco-de-notas/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\ninterface Nota {\n  id: number;\n  titulo: string;\n  conteudo: string;\n}\n\nconst App: React.FC = () => {\n  const [notas, setNotas] = useState<Nota[]>([]);\n  const [titulo, setTitulo] = useState('');\n  const [conteudo, setConteudo] = useState('');\n\n  const adicionarNota = () => {\n    if (titulo.trim() !== '' && conteudo.trim() !== '') {\n      const novaNota: Nota = {\n        id: new Date().getTime(),\n        titulo,\n        conteudo,\n      };\n      setNotas([...notas, novaNota]);\n      setTitulo('');\n      setConteudo('');\n    } else {\n      alert('Por favor, preencha o título e o conteúdo da nota.');\n    }\n  };\n\n  const excluirNota = (id: number) => {\n    const novasNotas = notas.filter((nota) => nota.id !== id);\n    setNotas(novasNotas);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Bloco de Notas</h1>\n      <div className=\"form\">\n        <input\n          type=\"text\"\n          placeholder=\"Título da nota\"\n          value={titulo}\n          onChange={(e) => setTitulo(e.target.value)}\n        />\n        <textarea\n          placeholder=\"Conteúdo da nota\"\n          value={conteudo}\n          onChange={(e) => setConteudo(e.target.value)}\n        ></textarea>\n        <button onClick={adicionarNota}>Adicionar Nota</button>\n      </div>\n      <div className=\"notas\">\n        {notas.map((nota) => (\n          <div key={nota.id} className=\"nota\">\n            <h3>{nota.titulo}</h3>\n            <p>{nota.conteudo}</p>\n            <button onClick={() => excluirNota(nota.id)}>Excluir Nota</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}